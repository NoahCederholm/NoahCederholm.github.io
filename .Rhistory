3*2
1*[1]
seq(1, 100, 3)
x <- seq(1, 100, 3)
x
sum(x)
x <- 1
y <- c(1:2020)
z <- c(2:2021)
sum(x/y*z)
seq(1, 2021, 2)
3^2
x <- 3
x^2
x <- c(1:100)
sum(x)
x^2
sum(x)^2
sum(x)^x
sum(x^x)
sum(x^2920)
CovidDF <- read.csv(https://covid19.who.int/WHO-COVID-19-global-data.csv)
covidDF <- read.csv(https://covid19.who.int/WHO-COVID-19-global-data.csv)
covidDF <- read.csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
view(covidDF)
View(covidDF)
dim(covidDF)
str(covidDF)
sum(is.na(covidDF))
colSums(is.na(covidDF))
str(covidDF)
type(covidDF$ï..Date_reported)
class(covidDF$ï..Date_reported)
install.packages("lubridate")
library(lubridate)
ymd(covidDF$ï..Date_reported)
covidDF$ï..Date_reported <- ymd(covidDF$ï..Date_reported)
class(covidDF$ï..Date_reported)
colMeans(covidDF$New_cases)
?colMeans()
colMeans(covidDF$New_cases, na.rm=false,dims=1)
View(covidDF)
mean(covidDF$New_cases)
max(covidDF$New_cases)
by(covidDF$New_cases, covidDF$ï..Date_reported, sum)
mean(by(covidDF$New_cases, covidDF$ï..Date_reported, sum)
mean(by(covidDF$New_cases, covidDF$ï..Date_reported, sum)
mean(by(covidDF$New_cases, covidDF$ï..Date_reported, sum)
mean(by(covidDF$New_cases, covidDF$ï..Date_reported, sum)
mean(by(covidDF$New_cases, covidDF$ï..Date_reported, sum))
sum(covidDF$New_cases)
max(by(covidDF$New_cases, covidDF$ï..Date_reported, sum))
min(by(covidDF$New_cases, covidDF$ï..Date_reported, sum))
?which.max
which.max(covidDF$New_cases)
View(covidDF)
covidDF[1]
covidDF[1:2]
covidDF[5, 1]
covidDF[5, 2]
covidDF[5, ]
covidDF[which.max(covidDF$New_cases), ]
unique(covidDF$WHO_region)
length(unique(covidDF$WHO_region))
mean(by(covidDF$New_cases, covidDF$ï..Date_reported, sum))
euro <- covidDF[covidDF$WHO_region=="EURO", ]
View(euro)
mean(by(euro$New_cases, euro$ï..Date_reported, sum))
mean(by(covidDF$New_cases, covidDF$ï..Date_reported, sum))
by(covidDF$New_cases, covidDF$ï..Date_reported, sum)
by(by(covidDF$New_cases, covidDF$ï..Date_reported, sum), covidDF$WHO_region, mean)
by((by(covidDF$New_cases, covidDF$ï..Date_reported, sum)), covidDF$WHO_region, mean)
by((by(covidDF$New_cases, covidDF$ï..Date_reported, sum)), covidDF$WHO_region, mean)
dfexample <- read.csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
mean(by(euro$New_cases, euro$ï..Date_reported, sum))
euro <- covidDF[covidDF$WHO_region=="EURO", ]
install.packages('tidyverse')
read.csv('https://covidtracking.com/data/download/all-states-history.csv')
df <- read.csv('https://covidtracking.com/data/download/all-states-history.csv')
View(df)
library(lubridate)
df$date <- ymd(df$date)
class(df$date)
df$month = month(df$date)
df$weekday = wday(df$date)
df$monthday <- mday(df$date)
df$daily_death <- case_when(
df$deathIncrease <3 ~ 'low',
df$deathIncrease <=14 ~ 'medium',
TRUE ~ 'high'
)
df$daily_death <- case.when(
df$deathIncrease <3 ~ 'low',
df$deathIncrease <=14 ~ 'medium',
TRUE ~ 'high'
)
df$daily_death <- case_when(
df$deathIncrease <3 ~ 'low',
df$deathIncrease <=14 ~ 'medium',
TRUE ~ 'high'
)
?case_when
??case_when
df$daily_death <- case_when(
df$deathIncrease <3 ~ 'low',
df$deathIncrease <=14 ~ 'medium',
TRUE ~ 'high'
)
?group_by
install.packages('tidyverse')
?case_when
library(tidyverse)
?case_when
df$daily_death <- case_when(
df$deathIncrease <3 ~ 'low',
df$deathIncrease <=14 ~ 'medium',
TRUE ~ 'high'
)
df$month2 <- case_when(
df$monthday <11 ~ 'early_month',
df$deathIncrease <=20 ~ 'mid_month',
TRUE ~ 'end_month'
)
df <- read_csv('https://covidtracking.com/data/download/all-states-history.csv')
df
library(lubridate)
df$date <- ymd(df$date)
df$month = month(df$date)
df$weekday = wday(df$date)
df$monthday <- mday(df$date)
View(df)
df$daily_death <- case_when(
df$deathIncrease <3 ~ 'low',
df$deathIncrease <=14 ~ 'medium',
TRUE ~ 'high'
)
df$month2 <- case_when(
df$monthday <11 ~ 'early_month',
df$deathIncrease <=20 ~ 'mid_month',
TRUE ~ 'end_month'
)
df <- select(df, -df$totalTestsViral)
df <- select(df, -totalTestsViral)
x <- c(1:10)
x %>% sqrt
x %>% sqrt %>% sum
x %>% sqrt %>% sum %>% log
16 %>% log(2)
df %>%
group_by(dataQualityGrade) %>%
summarise(median(positiveIncrease))
df %>%
group_by(dataQualityGrade) %>%
summarise(median(positiveIncrease))
knitr::opts_chunk$set(message = FALSE)
install.packages('tidyverse')
df$month2 <- case_when(
df$monthday <11 ~ 'early_month',
df$deathIncrease <=20 ~ 'mid_month',
TRUE ~ 'end_month')
df$month2 <- case_when(
df$monthday <11 ~ 'early_month',
df$monthday <=20 ~ 'mid_month',
TRUE ~ 'end_month')
df %>% group_by(dataQualityGrade) %>%
+     summarise(max(positiveIncrease))
df %>%
group_by(month2) %>%
summarise(mean(positiveIncrease))
?filter
df %>%
filter(state=='RI' & state== 'MA') %>%
group_by(dataQualityGrade) %>%
summarise(mean(positiveIncrease))
df %>%
filter(state=='MA') %>%
group_by(weekday) %>%
summarise(sum(positiveIncrease))
df %>%
filter(state=='RI' & state== 'MA') %>%
group_by(dataQualityGrade) %>%
summarise(mean(positiveIncrease))
df %>%
filter(state=='RI' & state== 'MA') %>%
group_by(month2) %>%
summarise(sum(positiveIncrease))
df %>%
filter(state =='RI' | state == 'MA') %>%
group_by(month2) %>%
summarise(sum(positiveIncrease))
library(tidyverse)
df <- read_csv('titanic.csv')
library(tidyverse)
df <- read_csv('titanic.csv')
view(df)
sum(is.na(df))
colSums(is.na(df))
df <- read_csv('titanic.csv')
sum(is.na(df))
colSums(is.na(df))
df$Cabin <- NULL
?drop_na
sum(df=='', na.rm = TRUE)
view(df)
sum(is.na(df))
colSums(is.na(df))
df1 <- drop_na(df)
colSums(is.na(df))
colSums(is.na(df1))
colSums(is.na(df))
mean(df$Age)
mean(df$Age, na.rm = TRUE)
df$Age <- replace_na(df$Age, mean(df$Age, na.rm = TRUE))
view(df)
mean(df$Age)
colSums(is.na(df))
df$Embarked <- replace_na(df$Embarked, mode(df$Embarked, na.rm = TRUE))
df$Embarked <- replace_na(df$Embarked, mode(df$Embarked, na.rm = TRUE))
df$Embarked <- replace_na(df$Embarked, mode(df$Embarked))
colSums(is.na(df))
mean(df$Survived)
sum(df$Survived== 0)
sum(df$Survived== 1)
df %>% group_by(df$Sex) %>% summarise(Survival_Chance = mean(df$Survived))
sum(df$Survived, df$Sex = 'female')
sum(df$Survived, df$Sex == 'female')
sum(df$Survived, df$Sex == 'male')
sum(df$Survived)
?type
typeof(df$Survived)
class(df$Survived)
sum(df$Survived)
?sum
df %>% group_by(df$Sex) %>% summarise(sum(df$Survived))
sum(df$Survived)
df %>% group_by(Sex) %>% summarise(sum(Survived))
df %>% group_by(Sex) %>% summarise(Survival_Chance = mean(Survived))
summary(df)
summary(df$Age)
df$AgeGroup <- case_when(
df$Age <22 ~ 'young',
df$Age <=35 ~ 'middle',
df$Age >35 'old')
df$AgeGroup <- case_when(
df$Age <22 ~ 'young',
df$Age <=35 ~ 'middle',
df$Age >35 ~ 'old')
view(df)
covidDF <- read.csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
view covidDF
View(covidDF)
df %>% filter(state=='RI'|state=='MA') %>% ggplot()+
geom_point(mapping = aes(x = date, y = pos_in, color = state))
library(tidyverse)
library(lybridate)
library(lubridate)
df <- read_csv('https://covidtracking.com/data/download/all-states-history.csv')
df %>% filter(state=='RI'|state=='MA') %>% ggplot()+
geom_point(mapping = aes(x = date, y = pos_in, color = state))
library(knitr)
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(lubridate)
library(ggplot2)
df <- read_csv('https://covidtracking.com/data/download/all-states-history.csv')
df$day <- wday(df$date)
df$day_type <- case_when(df$day < 6 ~ 'weekday',
TRUE~'weekend')
df %>% filter (state=='MA' |state=='RI') %>%
ggplot(mapping=aes(x=death, y=hospitalized))+ geom_point()+ facet_wrap(~state)
df %>% filter (state=='MA'|state=='RI') %>%
ggplot(mapping=aes(x=death, y=hospitalized, color=state))+ geom_point()+ facet_wrap(state~day_type)
df %>% filter (state=='MA', month=='May') %>%
ggplot()+ geom_point(mapping=aes(x=death, y=hospitalized, color=state), position = 'jitter')
df %>% filter (state=='MA', month=='May') %>%
ggplot()+ geom_point(mapping=aes(x=death, y=hospitalized, color=day_type), position = 'jitter')
View(df)
View(df)
df %>% filter (state=='MA', day=='7') %>%
ggplot()+ geom_point(mapping=aes(x=death, y=hospitalized, color=day_type), position = 'jitter')
df %>% filter (state=='MA', day=='7' | day='3') %>%
df %>% filter (state=='MA', day=='7' | day=='3') %>%
ggplot()+ geom_point(mapping=aes(x=death, y=hospitalized, color=day_type), position = 'jitter')
df %>% filter (state=='MA', day=='7' | day=='3') %>%
ggplot()+ geom_point(mapping=aes(x=death, y=hospitalized, color=day_type), position = 'dodge')
df %>% filter (state=='MA') %>%
ggplot()+ geom_bar(mapping=aes(x=death, y=hospitalized, color=day_type), position = 'jitter')
df %>% filter (state=='MA') %>%
ggplot()+ geom_bar(mapping=aes(x=death, fill=day_type), position = 'jitter')
df %>% filter (state=='MA') %>%
ggplot()+ geom_bar(mapping=aes(x=death, fill=day_type), position = 'dodge')
df %>% filter (state=='MA') %>%
ggplot()+ geom_bar(mapping=aes(x=dataQualityGrade, fill=day_type), position = 'dodge')
df %>% filter (state=='MA') %>%
ggplot()+ geom_bar(mapping=aes(x=dataQualityGrade, fill=day_type), position = 'fill')
df %>% filter (state=='MA') %>%
ggplot()+ geom_col(mapping=aes(x=dataQualityGrade, y = min))
df %>% filter (state=='MA') %>%
ggplot()+ geom_col(mapping=aes(x=dataQualityGrade, y = median))
df %>% filter (state=='MA') %>%
ggplot()+ geom_col(mapping=aes(x=dataQualityGrade, y = mean))
df %>% filter (state=='MA') %>%
ggplot()+ geom_col(mapping=aes(x=dataQualityGrade, y = death))
df %>% filter (state=='MA') %>% summarise(mean=mean(death))%>%
ggplot()+ geom_col(mapping=aes(x=dataQualityGrade, y = death))
df %>% filter (state=='MA') %>% summarise(mean=mean(death))%>%
ggplot()+ geom_col(mapping=aes(x=dataQualityGrade, y = mean))
df %>% filter (state=='MA') %>% summarise(mean=mean(death)) %>%
ggplot()+ geom_col(mapping=aes(x=dataQualityGrade, y = mean))
df %>% group_by(dataQualityGrade) %>% summarise(mean=mean(death)) %>%
ggplot()+ geom_col(mapping=aes(x=dataQualityGrade, y = mean))
df %>% filter (state=='MA' |state=='RI') %>%
ggplot(mapping=aes(x=death, y=hospitalized))+ geom_point()+ facet_wrap(~state) + labs(x='Number of deaths',
y="Number of Hospitalizations",
title="Deaths vs Hospitalizations",
caption"Displays the Deaths versus hospitalizations")
df %>% filter (state=='MA' |state=='RI') %>%
ggplot(mapping=aes(x=death, y=hospitalized))+ geom_point()+ facet_wrap(~state) + labs(x='Number of deaths',
y="Number of Hospitalizations",
title="Deaths vs Hospitalizations",
caption="Displays the Deaths versus hospitalizations")
df %>% filter (state=='MA'|state=='RI') %>%
ggplot(mapping=aes(x=death, y=hospitalized, color=state))+ geom_point()+ facet_wrap(state~day_type)+
labs(x='Number of deaths',
y="Number of Hospitalizations",
color="States"
title="Deaths vs Hospitalizations",
df %>% filter (state=='MA'|state=='RI') %>%
ggplot(mapping=aes(x=death, y=hospitalized, color=state))+ geom_point()+ facet_wrap(state~day_type)+
labs(x='Number of deaths',
y="Number of Hospitalizations",
color="States",
title="Deaths vs Hospitalizations",
caption="Displays the Deaths versus hospitalizations")
df %>% filter (state=='MA', day=='7' | day=='3') %>%
ggplot()+ geom_point(mapping=aes(x=death, y=hospitalized, color=day_type), position = 'jitter')+
labs(x='Number of deaths',
y="Number of Hospitalizations",
color="Day Type",
title="Deaths vs Hospitalizations for Sunday and Wed",
caption="Displays the Deaths versus hospitalizations for two days")
df %>% filter (state=='MA') %>%
ggplot()+ geom_bar(mapping=aes(x=dataQualityGrade, fill=day_type), position = 'dodge') +
labs(x='Count of Quality Grade',
color="Day Type",
title="Amount of Data Quality Grades",
caption="Bar chart for Data Quality")
df %>% filter (state=='MA') %>%
ggplot()+ geom_bar(mapping=aes(x=dataQualityGrade, fill=day_type), position = 'dodge') +
labs(x = "Data Quality",
y='Count of Quality Grade',
color="Day Type",
title="Amount of Data Quality Grades",
caption="Bar chart for Data Quality")
df %>% filter (state=='MA') %>%
ggplot()+ geom_bar(mapping=aes(x=dataQualityGrade, fill=day_type), position = 'fill') +
labs(x = "Data Quality",
y='Count of Quality Grade',
color="Day Type",
title="Amount of Data Quality Grades",
caption="Bar chart for Data Quality")
df %>% group_by(dataQualityGrade) %>% summarise(mean=mean(death)) %>%
ggplot()+ geom_col(mapping=aes(x=dataQualityGrade, y = mean)) +
labs(x = "Data Quality",
y='Count of Quality Grade',
color="Day Type",
title="Amount of Data Quality Grades",
caption="Bar chart for Data Quality")
df %>% group_by(dataQualityGrade) %>% summarise(mean=mean(death)) %>%
ggplot()+ geom_col(mapping=aes(x=dataQualityGrade, y = mean)) +
labs(x = "Data Quality",
y='Average deaths',
color="Day Type",
title="Amount of Data Quality Grades",
caption="Column chart for Data Quality")
df %>% filter (state=='MA') %>%
ggplot()+ geom_bar(mapping=aes(x=dataQualityGrade, fill=day_type), position = 'dodge') +
labs(x = "Data Quality",
y='Count of Quality Grade',
color="Day Type",
title="Amount of Data Quality Grades",
caption="Bar chart for Data Quality")+ theme_dark()
df %>% filter (state=='MA') %>%
ggplot()+ geom_bar(mapping=aes(x=dataQualityGrade, fill=day_type), position = 'dodge') +
labs(x = "Data Quality",
y='Count of Quality Grade',
color="Day Type",
title="Amount of Data Quality Grades",
caption="Bar chart for Data Quality") + ggsave('abc.png')+ggsave('abc.pdf')
setwd("~/GitHub/NoahCederholm.github.io")
setwd("~/GitHub/NoahCederholm.github.io")
knitr::opts_chunk$set(message = FALSE)
library(tidyverse)
library(lubridate)
library(ggplot2)
df <- read_csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
df$day <- wday(df$date)
library(tidyverse)
library(lubridate)
library(ggplot2)
df <- read_csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
library(tidyverse)
library(lubridate)
library(ggplot2)
library(gganimate)
df <- read_csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
install.packages(gifski)
install.packages('gifski')
library(tidyverse)
library(lubridate)
library(ggplot2)
library(gganimate)
library(gifski)
df <- read_csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
View(df)
View(df)
library(tidyverse)
library(lubridate)
library(ggplot2)
library(gganimate)
library(gifski)
df <- read_csv('https://covid19.who.int/WHO-COVID-19-global-data.csv')
df$month <- month(df$Date_reported, label = TRUE)
d1 <- df %>%
filter(Country %in% c('Ecuador','United States of America'),
month>4)%>%
group_by(month, Country) %>%
summarise(mean = mean(Cumulative_deaths))
View(d1)
View(d1)
d1 <- df %>%
filter(Country %in% c('Ecuador','United States of America'))%>%
group_by(month, Country) %>%
summarise(mean = mean(Cumulative_deaths))
kable
d1 <- df %>%
filter(Country %in% c('Ecuador','United States of America'))%>%
group_by(month, Country) %>%
summarise(mean = mean(Cumulative_deaths))
View(d1)
View(d1)
d1 <- df %>%
filter(Country %in% c('Ecuador','United States of America'))%>%
group_by(month, Country) %>%
summarise(mean = mean(Cumulative_deaths))
d2 <- d1 %>%
group_by(month) %>%
mutate(rank=rank(-mean))
View(d2)
View(d2)
d1 <- df %>%
filter(Country %in% c('Ecuador','United States of America'))%>%
group_by(month, Country) %>%
summarise(mean = mean(Cumulative_deaths))
d2 <- d1 %>%
group_by(month) %>%
mutate(rank=rank(-mean))
p1 <- d2 %>%
ggplot(aes(y=factor(rank),
x=mean, group=Country,
fill=Country)) +
geom_col()+
transition_states(month)+
labs(x = 'Total Positive',
title = 'Month: {closest_state}')
animate(p1, nframes=100, fps=20)
View(p1)
View(p1)
BR2 <- df %>%
filter(Country %in% c('Italy','United States of America'))%>%
group_by(month, Country) %>%
summarise(mean = mean(Cumulative_cases))
Bar2 <- BR2 %>%
group_by(month) %>%
mutate(rank=rank(-mean))
animate2 <- d2 %>%
ggplot(aes(y=factor(rank),
x=mean, group=Country,
fill=Country)) +
geom_col()+
transition_states(month)+
labs(x = 'Total Cases Over Time',
title = 'Month: {closest_state}')
animate(p1, nframes=100, fps=15)
